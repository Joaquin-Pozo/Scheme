#lang scheme
#lang scheme
(define fn (lambda (lst)
             (if (null? lst)
                 0
                 (+ 1 (fn (cdr lst))))))
(define len (fn (list 1 2 3 4 5 6 7 8)))
len
; utilizando recursion de cola
(define fn-cola (lambda (lst)
                  (define (wrapper lst acc)
                    (if (null? lst)
                        acc
                        (wrapper (cdr lst) (+ 1 acc))))
                  (wrapper lst 0)))

(define len-cola (fn-cola (list 1 2 3 4 5 6 7 8)))
len-cola
;utilizando lambda
(define fn-cola2 (lambda (lst)
                   (define wrapper2 (lambda (lst acc)
                                      (if (null? lst)
                                          acc
                                          (wrapper2 (cdr lst) (+ 1 acc)))))
                   (wrapper2 lst 0)))
(define len-cola2 (fn-cola2 (list 1 2 3 4 5 6 7 8)))
len-cola2